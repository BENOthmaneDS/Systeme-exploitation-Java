package com.esisa.exam.os;

import java.awt.Color;


public class CheckerBoard {

	private Color colors[][];
	private int colorCounter;
	
	public CheckerBoard() {
		
	}

	synchronized public boolean write(Color color, int x, int y) {
		if(colors[x][y] == null) {
			System.out.println("=> Debut Ecriture du couleur " + color + " " + Thread.currentThread().getName());
			colors[x][y] = color;
			pause(2000);
			colorCounter++;
			System.out.println("=> Fin Ecriture du couleur " + color + " " + Thread.currentThread().getName());
			return true;
		}
		return false;
	}
	
	synchronized public Color read(int x, int y) {
		Color color = colors[x][y];
		if(color != null) {
			System.out.println("=> Debut Lecture du couleur " + color + " " + Thread.currentThread().getName());
			colors[x][y] = null;
			pause(2000);
			colorCounter--;
			System.out.println("=> Fin Lecture du couleur " + color + " " + Thread.currentThread().getName());
			return color;
		}
		return Color.BLACK;
	}
	
	synchronized public int getColorCount() {
		int count = 0;
		for (Color[] colors1 : colors) {
			for (Color color : colors1) {
				if(color != null) {
					count++;
				}
			}
		}
		return count;
	}
	
	public static void pause(int time) {
		try {
			Thread.sleep(time);
		}
		catch (Exception e) {}
	}
	
	public Color[][] getColors() {
		return colors;
	}
	
}

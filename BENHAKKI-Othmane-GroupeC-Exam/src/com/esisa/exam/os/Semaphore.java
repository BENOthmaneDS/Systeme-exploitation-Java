//package com.esisa.exam.os;
//
//public class Semaphore {
//
//	public class Semaphore {
//		private int value; // Quantité de ressources disponibles
//		private LinkedList<Thread> waitingThreadList;
//		
//		private boolean logging = true;
//		
//		public Semaphore() {
//			init(1); // Sémaphore d'exclusion mutuelle
//		}
//		
//		public Semaphore(int n) {
//			init(n);
//		}
//		
//	// Primitivies de Dijkstra (3)
//		synchronized public void init(int n) {
//			value = n;
//			waitingThreadList = new LinkedList<Thread>();
//		}
//		
//		synchronized public void lock() { // Wait de Dijkstra
//			value--;
//			if (value < 0) {
//				sleep(); // se bloquer
//			}
//		}
//		
//		synchronized public void unlock() { // Signal de Dijkstra
//			value++;
//			if (value <= 0) {
//				wakeup();
//			}
//		}
//	//------------------------------
//		public void sleep() {
//			Thread current = Thread.currentThread();
//			waitingThreadList.add(current);
//			log(current + " se bloque => " + waitingThreadList);
//			try {
//				wait();
//			}
//			catch (Exception e) {}
//			waitingThreadList.remove(current);
//			log(current + " se réveille => " + waitingThreadList);
//		}
//		 
//		public void wakeup() {
//			log(Thread.currentThread().getName()
//					+ " envoie un signal à l'un des processus bloqués");
//			notify();
//		}
//		
//		public void log(String message) {
//			if (logging) {
//				System.out.println(message);
//			}
//		}
//		
//		public void setLogging(boolean logging) {
//			this.logging = logging;
//		}
//	}
//
//
//}
